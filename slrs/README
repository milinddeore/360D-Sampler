# README #

This README would normally document whatever steps are necessary to get your application up and running.

### What is this repository for? ###

* This is DSLR based product sampler, which takes snaps of the product from 360 degree. This requires a rotating top where the product is placed while capturing pictures. This software also needs a hardware barcode scanner, optinally user can enter the product name/barcode manually too.
* This is tested version 1.0
* [Learn Markdown](https://bitbucket.org/tutorials/markdowndemo)

### How do I get set up? ###

* Summary of set up: rotating top, hardware barcode scanner, tripods and ubuntu based machine. 
* Configuration: Please see the setup.installation file for details. 
* Dependencies: None
* Database configuration: None
* How to run tests: go to ./examples/ directory of the project and run 'sample-capture' program. This program also has various options run 'sample-capture -u' to lean more.
* Deployment instructions: Follow the drawing atttached to the repo for details. 

### How to compile and install libgphotos2 and sampler application

* Compile and install as per mentioned [here](https://github.com/gphoto/libgphoto2/blob/master/INSTALL)

### Troubleshooting 

If you got this error running apt-get or some other program:
perl: warning: Setting locale failed.
perl: warning: Please check that your locale settings:

Just run this code:
export LANGUAGE=en_US.UTF-8
export LANG=en_US.UTF-8
export LC_ALL=en_US.UTF-8
locale-gen en_US.UTF-8
dpkg-reconfigure locales


### Contribution guidelines ###

* Writing tests
* Code review
* Other guidelines

### Who do I talk to? ###

* Repo owner or admin
* Other community or team contact


				   libgphoto2
				   ----------

Hello and welcome to the wonderful world of gphoto! This is libgphoto2, the 
successor of gphoto with lots of new features and additional camera
drivers. 

If you miss a feature, would like to report success or failure, or have any
questions, please don't hesitate to contact our mailing list.



What is libgphoto2?
-------------------

libgphoto2 is a library that can be used by applications to access various 
digital cameras.  

For more information on gphoto, see

        http://www.gphoto.org/

There, you can also get information on mailing lists, supported cameras,
and availability of gphoto2. Another source of information is

        https://github.com/gphoto

where you can access our SVN server to fetch the source code of
gphoto2, gtkam and GnoCam (see below).



What is libgphoto2 not?
-----------------------

libgphoto2 itself is not a GUI application, opposed to gphoto. There are
GUI frontends for the gphoto2 library, however, such as gtkam for
example.

libgphoto2 can only talk to cameras the language of those it understands.
That is, if you own a camera that speaks a language that isn't published
anywhere and nobody has been able to figure out the meaning of the sentences,
libgphoto2 cannot communicate with those cameras. 

Then, there are cameras supporting the so-called USB Mass Storage protocol.
This is a protocol that has been published and lets you access any storage
device, be it a camera or a disk connected via USB to your computer. As there
are already drivers for this protocol out there, you don't need an additional
library like libgphoto2. The list of camera that use USB Mass Storage is getting
longer everyday, so we won't publish it.

For a more up to date list, you can consult 

	http://www.teaser.fr/~hfiguiere/linux/digicam.html

Your operating system will tell you about that because it is likely to recognise
the device as a SCSI disk that you can mount (for Linux 'dmesg' will tell you).
Again, those cameras *cannot* be accessed through libgphoto2. Some of them can
be switched to use a different communication protocol and might be in that case
useable with libgphoto2.

Other camera support a protocol called PTP or USB Imaging Devices that has
been developped by Kodak and other. libgphoto2 does support PTP. Also working
will be cameras labeled as "PictBridge", which is a extension to PTP.

Almost all cameras that are not mass storage support it these days, including
but not limited to all Nikon, Canon, Fuji, Sony, Panasonic, HP and more.

PTP camera unknown to libgphoto2 will be detected as a generic PTP camera and
will work as-is without any changes.

MTP (Microsoft Transfer Protocol) capable devices will also be accessible,
since MTP is based on PTP.


Platforms
---------

libgphoto2 should compile and run on pretty much all Unix-like platforms.
libgphoto2 has _not_ (yet?) been ported to any operating system from MicroSoft.



How to set up libgphoto2
------------------------

For information on how to set up libgphoto2 and its frontends, see 
The gPhoto2 Manual.

It is available at the following places:

 - At the gphoto website: http://www.gphoto.org/

 - In the SVN module gphoto2-manual

The gPhoto2 Manual includes information about setting up USB
hotplugging.

If you run into problems, you may also consult the FAQ (also included
in The gPhoto2 Manual).



Frontends
---------

gphoto2 is a command line frontend which is quite powerful, 
especially in combination with scripts. See The gPhoto2 Manual 
for a short description. 

For the GUI lovers, there are for example digikam (KDE), gthumb (GNOME),
f-spot (GNOME / Mono) and more. We also have a GTK2 reference GUI
called gtkam, which is unmaintained, its only special features are
capture abilitiy.
Additionally, there are plugins for other programs available like
kio_camera (KDE - Konqueror) and a fuse plugin, gphotofs.



Reporting Bugs
--------------

Every piece of software contains errors and flaws. So does
libgphoto2. When you encounter something that does not work, please do
the following: 

1. Find out whether this is a known problem.

2. Reproduce the problem with debug output enabled and the language
   set to English, so that the development team will understand the
   messages. You can do this by running:

      env LC_ALL=C gtkam

   if you're using the gtkam frontend or running:

      env LC_ALL=C gphoto2 --debug-logfile=logfile.log --debug <options>

   using the gphoto2 command line interface.

3. Report the problem on the mailing list with the corresponding debug
   output if it is small. If it is more than a few kilobytes, please
   don't post the complete debug output on the list.
